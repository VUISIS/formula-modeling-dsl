model Guidance of Intermediate at "Intermediate.4ml"
{
    Sensor is Component("Sensor").
    Port(Sensor, "turn_on", "event", "").
    Port(Sensor, "turn_off", "event", "").

    SensorModes is AttributeGroup(Sensor, "modes").

    sensor_on_mode is Condition(Sensor, "on").
    sensor_off_mode is Condition(Sensor, "off").
    sensor_fail_mode is Condition(Sensor, "fail").

    
    NavigationalSensor is Component("NavigationalSensor").
    Inherit(Sensor, NavigationalSensor).

    NavigationalSensorNotDependentOnRadio is Component("NavigationalSensorNotDependentOnRadio").
    Inherit(NavigationalSensor, NavigationalSensorDependentOnRadio).

    NavigationalSensorDependentOnRadio is Component("NavigationalSensorDependentOnRadio").
    Inherit(NavigationalSensor, NavigationalSensorDependentOnRadio).

    Gps is Component("GPS").
    Inherit(NavigationalSensorDependentOnRadio, Gps).

    gps_out_current_latitude is Port(Gps, "out_current_latitude", "out", "Base_Types::Float").
    gps_out_current_longitude is Port(Gps, "out_current_longitude", "out", "Base_Types::Float").
    gps_out_current_altitude is Port(Gps, "out_current_altitude", "out", "Base_Types::Float").
    gps_out_current is Port(Gps, "out_current", "out", "Base_Types::Float").

    gps_in_reset is Port(Gps, "in_reset", "in", "").
    gps_in_recalibrate is Port(Gps, "in_recalibrate", "in", "").

    Ins is Component("INS").
    Inherit(NavigationalSensorNotDependentOnRadio, Ins).

    ins_out_current_position is Port(Ins, "out_current_position", "out", "Base_Types::Float").
    ins_out_current_velocity is Port(Ins, "out_current_velocity", "out", "Base_Types::Float").
    ins_out_current_direction is Port(Ins, "out_current_direction", "out", "Base_Types::Float").

    ins_out_current is Port(Ins, "out_current", "out", "Base_Types::Float").

    ins_in_reset is Port(Ins, "in_reset", "in", "").
    ins_in_recalibrate is Port(Ins, "in_recalibrate", "in", "").

    ThreeAxisAccelerometer is Component("ThreeAxisAccelerometer").
    Inherit(NavigationalSensorNotDependentOnRadio, ThreeAxisAccelerometer).

    taa_out_x_acceleration is Port(ThreeAxisAccelerometer, "out_x_acceleration", "out", "Base_Types::Float").
    taa_out_y_acceleration is Port(ThreeAxisAccelerometer, "out_y_acceleration", "out", "Base_Types::Float").
    taa_out_z_acceleration is Port(ThreeAxisAccelerometer, "out_z_acceleration", "out", "Base_Types::Float").
    taa_out_current is Port(ThreeAxisAccelerometer, "out_current", "out", "Base_Types::Float").
    taa_in_reset is Port(ThreeAxisAccelerometer, "in_reset", "in", "").

    Actuator is Component("Actuator").
    actuator_on_mode is Condition(Actuator, "on").
    actuator_off_mode is Condition(Actuator, "off").
    actuator_fail_mode is Condition(Actuator, "fail").
    
    FinControl is Component("FinControl").
    fc_in_desired is Port(FinControl, "in_desired", "in", "Base_Types::Float").
    fc_in_abort is Port(FinControl, "in_abort", "in", "").

    FinControlImpl is Component("FinControl").
    Inherit(FinControl, FinControlImpl).

    INSUser is Component("INSUser").
    GPSUser is Component("GPSUser").

    SeekerTrackerComponent is Component("SeekerTrackerComponen").
    Inherit(Sensor, SeekerTrackerComponent).

    stc_out_current_range is Port(SeekerTrackerComponent, "out_curret_range", "out", "Base_Types::Float").
}
